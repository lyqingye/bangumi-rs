name: Release Please

on:
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          config-file: .github/release-please-config.json
          manifest-file: .github/release-please-manifest.json

  # ÂΩì release-please ÂàõÂª∫Êñ∞ÁöÑ release Êó∂ÔºåËß¶ÂèëÂêéÁ´ØÊûÑÂª∫
  trigger-backend-release:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    uses: ./.github/workflows/release-backend.yml
    secrets:
      RELEASE_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}

  # ÂΩì release-please ÂàõÂª∫Êñ∞ÁöÑ release Êó∂ÔºåËß¶ÂèëÂâçÁ´ØÊûÑÂª∫
  trigger-frontend-release:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    uses: ./.github/workflows/release-frontend.yml
    secrets:
      RELEASE_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}

  # ÂΩì release-please ÂàõÂª∫Êñ∞ÁöÑ release Êó∂ÔºåËß¶ÂèëÊûÑÂª∫Âíå‰∏ä‰º†
  build-and-release:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}

      # ÁîüÊàêÂÆåÊï¥ÁöÑ changelog
      - name: Generate Changelog
        id: changelog
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          script: |
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
              base: 'master',
              sort: 'updated',
              direction: 'desc',
              per_page: 100
            });

            const categories = {
              'feat': 'üöÄ Features',
              'fix': 'üêõ Bug Fixes',
              'docs': 'üìö Documentation',
              'chore': 'üîß Maintenance',
              'refactor': '‚ôªÔ∏è Refactor',
              'perf': '‚ö°Ô∏è Performance',
              'test': '‚úÖ Testing'
            };

            const changes = {};
            Object.values(categories).forEach(cat => changes[cat] = []);

            pulls.forEach(pr => {
              if (!pr.title) return;
              
              const match = pr.title.match(/^(\w+)(?:\(.*?\))?:/);
              if (!match) return;
              
              const type = match[1];
              const category = categories[type] || categories['chore'];
              
              changes[category].push({
                title: pr.title,
                number: pr.number,
                url: pr.html_url
              });
            });

            let changelog = '## What\'s Changed\n\n';

            Object.entries(changes).forEach(([category, items]) => {
              if (items.length === 0) return;
              
              changelog += `### ${category}\n\n`;
              items.forEach(item => {
                changelog += `* ${item.title} (#${item.number})\n`;
              });
              changelog += '\n';
            });

            return changelog;

      # Êõ¥Êñ∞ release ÊèèËø∞
      - name: Update Release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          script: |
            const tag = '${{ needs.release-please.outputs.tag_name }}';
            const changelog = `${{ steps.changelog.outputs.result }}`;

            const { data: release } = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: tag
            });

            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.id,
              body: changelog
            });

