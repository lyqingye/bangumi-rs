import{_ as i,c as e,o as l,ag as t}from"./chunks/framework.Ckikgd0K.js";const p=JSON.parse('{"title":"项目介绍","description":"","frontmatter":{},"headers":[],"relativePath":"introduction/index.md","filePath":"introduction/index.md","lastUpdated":1741430793000}'),r={name:"introduction/index.md"};function n(o,a,s,d,u,h){return l(),e("div",null,a[0]||(a[0]=[t('<h1 id="项目介绍" tabindex="-1">项目介绍 <a class="header-anchor" href="#项目介绍" aria-label="Permalink to &quot;项目介绍&quot;">​</a></h1><h2 id="什么是-bangumi-rs" tabindex="-1">什么是 Bangumi-rs？ <a class="header-anchor" href="#什么是-bangumi-rs" aria-label="Permalink to &quot;什么是 Bangumi-rs？&quot;">​</a></h2><p>Bangumi-rs 是一款基于 Rust 和 Vue 3 开发的动漫追番工具，旨在为动漫爱好者提供一站式的番剧管理解决方案。它集成了番剧订阅、智能下载、在线播放等功能，让你的追番体验更加便捷和高效。</p><h2 id="开发初衷" tabindex="-1">开发初衷 <a class="header-anchor" href="#开发初衷" aria-label="Permalink to &quot;开发初衷&quot;">​</a></h2><p>随着动漫资源的日益丰富，追番爱好者常常面临以下问题：</p><ul><li>需要在多个网站查找和下载资源</li><li>手动筛选合适的字幕组和分辨率</li><li>难以跟踪已下载和未下载的剧集</li><li>缺乏统一的元数据管理</li></ul><p>Bangumi-rs 正是为解决这些问题而生，它通过自动化的方式帮助用户管理和下载番剧，节省时间和精力。</p><h2 id="适用场景" tabindex="-1">适用场景 <a class="header-anchor" href="#适用场景" aria-label="Permalink to &quot;适用场景&quot;">​</a></h2><p>Bangumi-rs 适合以下场景：</p><ul><li>个人家庭媒体服务器</li><li>需要自动化追番流程的用户</li></ul><h2 id="项目愿景" tabindex="-1">项目愿景 <a class="header-anchor" href="#项目愿景" aria-label="Permalink to &quot;项目愿景&quot;">​</a></h2><p>我们的愿景是打造一个高效、智能、易用的动漫管理工具，让追番变得简单而愉快。未来，我们计划：</p><ul><li>支持更多资源站点</li><li>增强解析能力</li><li>提供更丰富的元数据展示</li><li>优化用户界面和使用体验</li><li>增加更多播放器支持</li></ul><h2 id="开源协议" tabindex="-1">开源协议 <a class="header-anchor" href="#开源协议" aria-label="Permalink to &quot;开源协议&quot;">​</a></h2><p>Bangumi-rs 基于 MIT 许可证开源，欢迎社区贡献和使用。</p>',15)]))}const m=i(r,[["render",n]]);export{p as __pageData,m as default};
