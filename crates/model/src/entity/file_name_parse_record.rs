//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use super::sea_orm_active_enums::ParserStatus;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "file_name_parse_record")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub file_name: String,
    pub release_group: Option<String>,
    pub bangumi_name: Option<String>,
    pub season_number: Option<i32>,
    pub episode_number: Option<i32>,
    pub language: Option<String>,
    pub video_resolution: Option<String>,
    pub year: Option<i32>,
    pub parser_name: String,
    pub parser_status: ParserStatus,
    #[sea_orm(column_type = "Text", nullable)]
    pub err_msg: Option<String>,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
